<!--
 Build XML file for ProcessEditor Workbench and Server.
 (c) 2014 Frank Puhlmann.
-->
<project name="processeditor" basedir="." default="clean-build-run-workbench">

    <property name="src.dir" value="src"/>
    <property name="pics.dir" value="pics"/>
    <property name="www.dir" value="www"/>
    <property name="resources.dir" value="resources"/>

    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir" value="${build.dir}/jar"/>

    <property name="main-class-workbench" value="com.inubit.research.gui.Workbench"/>
    <property name="main-class-server" value="com.inubit.research.server.ProcessEditorServer"/>

    <property name="lib.dir" value="lib"/>

    <property name="test.dir" value="test"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <fileset id="pics" dir="${pics.dir}">
        <include name="**/*.gif"/>
        <include name="**/*.jpg"/>
        <include name="**/*.png"/>
    </fileset>

    <fileset id="www" dir="${www.dir}">
        <include name="**/*.js"/>
        <include name="**/*.css"/>
        <include name="**/*.html"/>
    </fileset>

    <fileset id="resources" dir="${resources.dir}">
        <include name="**/*.xml"/>
    </fileset>

    <target name="clean">
        <delete dir="${build.dir}"/>
	<delete>
             <fileset dir="${lib.dir}" includes="*.jar"/>
        </delete>
    </target>

    <target name="compile" depends="deps">
        <mkdir dir="${classes.dir}"/>
        <javac source="1.7" target="1.7" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
    </target>

    <target name="jar-workbench" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <fileset refid="pics"/>
            <fileset refid="resources"/>
            <manifest>
                <attribute name="Main-Class" value="${main-class-workbench}"/>
            </manifest>
        </jar>
    </target>

    <target name="jar-server" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <fileset refid="pics"/>
            <fileset refid="www"/>
            <fileset refid="resources"/>
            <manifest>
                <attribute name="Main-Class" value="${main-class-server}"/>
            </manifest>
        </jar>
    </target>

    <target name="run-workbench.jar" depends="jar-workbench">
        <java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <!--
    Runs the server from the compiled jar.
    -->
    <target name="run-server.jar" depends="jar-server">
        <java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <target name="clean-build-workbench" depends="clean,jar-workbench"/>

    <target name="clean-build-run-workbench" depends="clean,run-workbench.jar"/>

    <target name="clean-build-server" depends="clean,jar-server"/>

    <target name="clean-build-run-server" depends="clean,run-server.jar"/>

    <target name="maillib">
	<exec executable="wget">
		<arg value="http://www.java2s.com/Code/JarDownload/javax.mail/javax.mail-1.4.7.jar.zip"/>
	</exec>
	<exec executable="unzip">
		<arg value="javax.mail-1.4.7.jar.zip"/>
		<arg value="-d${lib.dir}"/>
	</exec>
	<delete file="javax.mail-1.4.7.jar.zip"/>
    </target>

    <target name="camundaxml">
	<exec executable="wget">
		<arg value="https://github.com/camunda/camunda-xml-model/archive/7.2.0-alpha5.zip"/>
	</exec>
	<exec executable="unzip">
		<arg value="7.2.0-alpha5.zip"/>
		<arg value="-d${lib.dir}"/>
	</exec>
	<exec executable="mvn">
		<arg value="install"/>
		<arg value="-Dmaven.test.skip=true"/>
		<arg value="-f${lib.dir}/camunda-xml-model-7.2.0-alpha5/pom.xml"/>
	</exec>
	<move file="${lib.dir}/camunda-xml-model-7.2.0-alpha5/target/camunda-xml-model-7.2.0-alpha5.jar" tofile="${lib.dir}/camunda-xml-model-7.2.0-alpha5.jar"/>
	<delete dir="${lib.dir}/camunda-xml-model-7.2.0-alpha5"/>
	<delete file="7.2.0-alpha5.zip"/>
    </target>

    <target name="camundabpmn">
	<exec executable="wget">
		<arg value="https://github.com/camunda/camunda-bpmn-model/archive/7.2.0-alpha5.zip"/>
	</exec>
	<exec executable="unzip">
		<arg value="7.2.0-alpha5.zip"/>
		<arg value="-d${lib.dir}"/>
	</exec>
	<exec executable="mvn">
		<arg value="install"/>
		<arg value="-Dmaven.test.skip=true"/>
		<arg value="-f${lib.dir}/camunda-bpmn-model-7.2.0-alpha5/pom.xml"/>
	</exec>
	<move file="${lib.dir}/camunda-bpmn-model-7.2.0-alpha5/target/camunda-bpmn-model-7.2.0-alpha5.jar" tofile="${lib.dir}/camunda-bpmn-model-7.2.0-alpha5.jar"/>
	<delete dir="${lib.dir}/camunda-bpmn-model-7.2.0-alpha5"/>
	<delete file="7.2.0-alpha5.zip"/>
    </target>

    <target name="collectionslib">
	<exec executable="wget">
		<arg value="http://apache.openmirror.de//commons/collections/binaries/commons-collections4-4.0-bin.zip"/>
	</exec>
	<exec executable="unzip">
		<arg value="commons-collections4-4.0-bin.zip"/>
		<arg value="commons-collections4-4.0/commons-collections4-4.0.jar"/>
		<arg value="-d${lib.dir}"/>
	</exec>
	<move file="${lib.dir}/commons-collections4-4.0/commons-collections4-4.0.jar" tofile="${lib.dir}/commons-collections4-4.0.jar"/>
	<delete dir="${lib.dir}/commons-collections4-4.0/"/>
	<delete file="commons-collections4-4.0-bin.zip"/>
    </target>

    <target name="hamcrest">
	<exec executable="wget">
		<arg value="http://search.maven.org/remotecontent?filepath=org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
	</exec>
	<move file="remotecontent?filepath=org%2Fhamcrest%2Fhamcrest-core%2F1.3%2Fhamcrest-core-1.3.jar" tofile="hamcrest-core-1.3.jar"/>
	<move file="hamcrest-core-1.3.jar" tofile="${lib.dir}/hamcrest-core-1.3.jar"/>
    </target>

    <target name="junit" depends="hamcrest">
	<exec executable="wget">
		<arg value="http://search.maven.org/remotecontent?filepath=junit/junit/4.10/junit-4.10.jar"/>
	</exec>
	<move file="remotecontent?filepath=junit%2Fjunit%2F4.10%2Fjunit-4.10.jar" tofile="junit-4.10.jar"/>
	<move file="junit-4.10.jar" tofile="${lib.dir}/junit-4.10.jar"/>
    </target>

    <target name="deps" depends="maillib,collectionslib,camundaxml,camundabpmn,junit"/>

    <target name="test" depends="compile">
        <junit printsummary="yes"  classpathref="classpath">
             <batchtest>
                  <fileset dir="${test.dir}">
		      <include name="**/*Test*.java" />
                  </fileset>
             </batchtest>
        </junit>
    </target>

</project>
