/**
 *
 * Process Editor - Editor Package
 *
 * (C) 2008-2010 Frank Puhlmann
 *
 * http://frapu.net
 *
 */
package net.frapu.code.visualization.editors;

import com.inubit.research.client.UserCredentials;
import com.inubit.research.gui.WorkbenchFetchModelDialog;
import java.awt.GridLayout;
import java.net.URI;
import javax.swing.JOptionPane;
import net.frapu.code.visualization.ProcessEdge;
import net.frapu.code.visualization.ProcessEditor;
import net.frapu.code.visualization.ProcessModel;
import net.frapu.code.visualization.ProcessNode;
import net.frapu.code.visualization.ProcessObject;
import net.frapu.code.visualization.ProcessUtils;
import net.frapu.code.visualization.SwingUtils;
import net.frapu.code.visualization.bpmn.BPMNModel;

/**
 *
 * @author fpu
 */
public class ReferenceChooser extends javax.swing.JDialog {

    private ProcessEditor editor;
    private String result = null;
    private ReferenceChooserRestriction restrictions;
    private UserCredentials credentials;

    /** Creates new form ElementReferenceChooser */
    public ReferenceChooser(java.awt.Frame parent, boolean modal, ReferenceChooserRestriction restrictions) {
        super(parent, modal);
        this.restrictions = restrictions;
        // Initialize Credentials
        credentials = UserCredentials.getDefaultCredentials();
        initComponents();
        init();
    }

    private void init() {
        previewPane.setLayout(new GridLayout(1, 1));
        editor = new ProcessEditor();
        editor.setScale(0.75);
        editor.setEditable(false);
        editor.setEnabled(false);
        editor.setModel(new BPMNModel());
        previewPane.add(editor);
    }

    private void updateModel(String uriString) {
        try {
            URI uri = new URI(uriString + ".pm");
            ProcessModel model = ProcessUtils.parseProcessModelSerialization(uri,credentials);
            editor.setModel(model);
            previewScrollPane.updateUI();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(previewPane, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            editor.setModel(new BPMNModel());
        }
    }

    /**
     * Returns an URI pointing to an XML schema element or NULL.
     * @return
     */
    public String getResult() {
        return result;
    }

    public void setLinkToHeadVersion(boolean b) {
        linkToHeadVersion.setSelected(b);
    }

    public boolean isLinkToHeadVersion() {
        return linkToHeadVersion.isSelected();
    }

    public void setUri(String uri) {
        if (uri == null) {
            return;
        }
        if (uri.isEmpty()) {
            return;
        }
        // Check if hash (#) is contained, if so remove
        if (uri.contains("#")) {
            uri = uri.substring(0, uri.indexOf("#"));
        }
        // Check if link to head version, if so remove trailing /versions
//        if (linkToHeadVersion.isSelected()) {
//            if (uri.contains("/version")) uri = uri.substring(0, uri.indexOf("/version"));
//        }
        // Initializes the dialog
        uriTextField.setText(uri);
        updateModel(uri);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        uriTextField = new javax.swing.JTextField();
        fetchButton = new javax.swing.JButton();
        fileDialogButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        previewScrollPane = new javax.swing.JScrollPane();
        previewPane = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        okButton = new javax.swing.JButton();
        linkToHeadVersion = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Choose reference");

        jLabel1.setText("Source model:");

        fetchButton.setText("Fetch");
        fetchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchButtonActionPerformed(evt);
            }
        });

        fileDialogButton.setText("...");
        fileDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileDialogButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Select a node:");

        javax.swing.GroupLayout previewPaneLayout = new javax.swing.GroupLayout(previewPane);
        previewPane.setLayout(previewPaneLayout);
        previewPaneLayout.setHorizontalGroup(
            previewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );
        previewPaneLayout.setVerticalGroup(
            previewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        previewScrollPane.setViewportView(previewPane);

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        linkToHeadVersion.setSelected(true);
        linkToHeadVersion.setText("Link to head version");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(linkToHeadVersion)
                    .addComponent(previewScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uriTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                        .addGap(5, 5, 5)
                        .addComponent(fileDialogButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fetchButton))
                    .addComponent(jLabel2)
                    .addComponent(okButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(uriTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fetchButton)
                    .addComponent(fileDialogButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previewScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(linkToHeadVersion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fetchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchButtonActionPerformed
        updateModel(uriTextField.getText());
    }//GEN-LAST:event_fetchButtonActionPerformed

    private void fileDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileDialogButtonActionPerformed
        WorkbenchFetchModelDialog fmd = new WorkbenchFetchModelDialog(null, true);
        if (isLinkToHeadVersion()) fmd.setOnlyHeadVersions(true);
        SwingUtils.center(fmd);
        fmd.setVisible(true);
        credentials = fmd.getCredentials();
        URI uri = fmd.getSelectedProcessModelUri();
        if (uri != null) {
            setUri(uri.toASCIIString());
        }
        // Hack to enforce refresh @todo: Find better refresh solution!!!
        setSize(getSize().width, getSize().height + 1);
    }//GEN-LAST:event_fileDialogButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Get Element from SelectionHandler
        if (!restrictions.isMultipleSelectionAllowed() & editor.getSelectionHandler().getSelectionSize() > 1) {
            JOptionPane.showMessageDialog(this, "Multiple selection not supported. Please select a single object.", "Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        result = uriTextField.getText();
        for (ProcessObject o : editor.getSelectionHandler().getSelection()) {

            if (restrictions.isRestricted(o)) {
                // Ok, dispose
                if (o != null) {
                    if (restrictions.isReturnNameOnly()) {
                        result += "#" + ((o instanceof ProcessNode) ? ((ProcessNode) o).getText() : ((ProcessEdge) o).getLabel());
                    } else {
                        result += "#" + o.getId();
                    }
                }
                dispose();
                return;
            }
        }

        String stereotypes = "";
        for (String s : restrictions.getStereotypeRestrictions()) {
            stereotypes += "<<" + s + ">>, ";
        }
        if (stereotypes.length() > 0) {
            stereotypes = stereotypes.substring(0, stereotypes.length() - 1);
        }
        String classes = "";
        for (Class c : restrictions.getNodeTypeRestrictions()) {
            classes += c.getSimpleName() + ",";
        }
        if (classes.length() > 0) {
            classes = classes.substring(0, classes.length() - 1);
        }

        JOptionPane.showMessageDialog(this, "Please select one of " + stereotypes + " " + classes + ".", "Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_okButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fetchButton;
    private javax.swing.JButton fileDialogButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JCheckBox linkToHeadVersion;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel previewPane;
    private javax.swing.JScrollPane previewScrollPane;
    private javax.swing.JTextField uriTextField;
    // End of variables declaration//GEN-END:variables
}
