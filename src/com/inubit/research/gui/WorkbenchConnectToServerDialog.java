/**
 *
 * Process Editor - inubit Workbench Package
 *
 * (C) 2009, 2010 inubit AG
 * (C) 2014 the authors
 * 
 */
package com.inubit.research.gui;

import com.inubit.research.client.InvalidUserCredentialsException;
import com.inubit.research.client.UserCredentials;
import java.awt.Color;
import java.net.URI;
import net.frapu.code.visualization.Configuration;

/**
 *
 * @author fpu
 */
public class WorkbenchConnectToServerDialog extends javax.swing.JDialog {

    public final static String CONF_SERVER_URI = "server_uri";
    public final static String CONF_SERVER_USER = "server_user";
    public final static String CONF_SERVER_PASSWORD = "server_password";

    private boolean loggedIn = false;
    private Workbench workbench;

    private UserCredentials credentials = null;
    private boolean credentialsOnly = false;

    /** Creates new form WorkbenchConnectToServerDialog */
    public WorkbenchConnectToServerDialog(java.awt.Frame parent, Workbench workbench, boolean credentialsOnly) {
        super(parent, true);
        this.workbench = workbench;
        this.credentialsOnly = credentialsOnly;
        initComponents();
        Configuration conf = Configuration.getInstance();
        if (!credentialsOnly) serverTextField.setText(conf.getProperty(CONF_SERVER_URI,"http://localhost:1205"));
        userTextField.setText(conf.getProperty(CONF_SERVER_USER,"root"));
        passwordTextField.setText(conf.getProperty(CONF_SERVER_PASSWORD,"inubit"));
        if (credentialsOnly) {
            serverTextField.setEnabled(false);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        serverTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        userTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        connectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Connect to Server");
        setModal(true);
        setResizable(false);

        jLabel1.setText("Server:");

        serverTextField.setText("http://localhost:1205");

        jLabel2.setText("User:");

        jLabel3.setText("Password:");

        passwordTextField.setText("inubit");

        userTextField.setText("root");

        connectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menu/login_small.gif"))); // NOI18N
        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        //jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_64x64_inubit-Workbench.gif"))); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_small.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(serverTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addComponent(userTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(connectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(serverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(userTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(connectButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed

        try {
            // Try to login user
            credentials = new UserCredentials(new URI(serverTextField.getText()), userTextField.getText(), new String(passwordTextField.getPassword()));
            // Fetching the session id does the actual login
            credentials.getSessionId();
        } catch (Exception ex) {
            // Error, highlight problem
            if (ex instanceof InvalidUserCredentialsException) {
                // Highlight user/password
                serverTextField.setBackground(Color.white);
                userTextField.setBackground(Color.RED);
                passwordTextField.setBackground(Color.red);
            } else {
                serverTextField.setBackground(Color.RED);
                userTextField.setBackground(Color.white);
                passwordTextField.setBackground(Color.white);
            }
            return;
        }

        // Save values
        Configuration conf = Configuration.getInstance();
        if (!credentialsOnly) {
            conf.setProperty(CONF_SERVER_URI, serverTextField.getText());
            conf.setProperty(CONF_SERVER_USER, userTextField.getText());
            conf.setProperty(CONF_SERVER_PASSWORD, new String(passwordTextField.getPassword()));
        }

        // Set successfull login
        loggedIn = true;
        dispose();
    }//GEN-LAST:event_connectButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        loggedIn = false;
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Returns the credentials of the user (if successfully logged in).
     * @return
     */
    public UserCredentials getCredentials() {
        return credentials;
    }

    public boolean isLoggedIn() {
        return loggedIn;
    }

    public void setServerURI(String uri) {
        serverTextField.setText(uri);
    }

    public void setUser(String user) {
        userTextField.setText(user);
        if (!serverTextField.isEnabled() &&  user.length()>0) userTextField.setEnabled(false);
    }

    public void setPassword(String password) {
        passwordTextField.setText(password);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTextField serverTextField;
    private javax.swing.JTextField userTextField;
    // End of variables declaration//GEN-END:variables

}
